name: RDS PostgreSQL Automation

on:
  workflow_dispatch:
    # inputs:
    #   environment:
    #     type: choice
    #           - prd
    #           - nonprd

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install PostgreSQL client
      run: sudo apt-get install postgresql-client -y

    - name: Create PostgreSQL table
      env:
        DB_HOST: ${{ secrets.RDS_ENDPOINT }}
        DB_USER: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
      run: |
        PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -U $DB_USER -d $DB_NAME -c "
        CREATE TABLE IF NOT EXISTS table1 (
          id SERIAL PRIMARY KEY,
          name VARCHAR(50),
          surname VARCHAR(50),
          age INT
        );"

    - name: Insert data into PostgreSQL table
      env:
        DB_HOST: ${{ secrets.RDS_ENDPOINT }}
        DB_USER: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
      run: |
        PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -U $DB_USER -d $DB_NAME -c "
        INSERT INTO table1 (name, age) 
        VALUES 
        ('Nikola', 'Mikic', 30),
        ('Martina', 'Viren', 20),
        ('Fridrih', 'Bauel', 52),
        ('Milena', 'Micic', 22),
        ('Nikolina', 'Iskic', 25);"

      #za AWS CLI, zbog komande za RDS
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 #for configuring credentials for communication with AWS services
      with: #secrets
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1 

    - name: Trigger RDS failover
      run: |
        aws rds reboot-db-instance --db-instance-identifier postgre_sql --force-failover
